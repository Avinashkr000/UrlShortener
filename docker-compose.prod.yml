version: '3.8'

services:
  # MySQL Database
  urlshortener-mysql:
    image: mysql:8.0
    container_name: urlshortener-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-yourpassword}
      MYSQL_DATABASE: url_shortener
      MYSQL_USER: ${MYSQL_USER:-urluser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-urlpassword}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - urlshortener-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  # Redis Cache
  urlshortener-redis:
    image: redis:7.2-alpine
    container_name: urlshortener-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - urlshortener-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s

  # Spring Boot Application
  urlshortener-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: urlshortener-app-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:mysql://urlshortener-mysql:3306/url_shortener?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      DATABASE_USERNAME: ${MYSQL_USER:-urluser}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD:-urlpassword}
      REDIS_HOST: urlshortener-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
      BASE_URL: ${BASE_URL:-http://localhost:8080}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC -XX:+UseStringDeduplication"
    depends_on:
      urlshortener-mysql:
        condition: service_healthy
      urlshortener-redis:
        condition: service_healthy
    networks:
      - urlshortener-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    volumes:
      - app_logs:/app/logs

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  app_logs:
    driver: local

networks:
  urlshortener-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16