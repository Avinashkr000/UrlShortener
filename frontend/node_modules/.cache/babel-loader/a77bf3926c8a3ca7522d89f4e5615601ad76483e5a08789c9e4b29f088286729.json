{"ast":null,"code":"var _jsxFileName = \"D:\\\\new for work\\\\projects\\\\url-shortener\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Trash2, ExternalLink, Copy, Calendar, BarChart3, RefreshCw } from 'lucide-react';\nimport copy from 'copy-to-clipboard';\nimport urlService from '../services/api'; // ✅ fixed import (no curly braces)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [urls, setUrls] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [deleteLoading, setDeleteLoading] = useState({});\n  useEffect(() => {\n    fetchUrls();\n  }, []);\n  const fetchUrls = async () => {\n    setIsLoading(true);\n    try {\n      const data = await urlService.getAllUrls();\n      setUrls(Array.isArray(data) ? data : []);\n    } catch (error) {\n      toast.error(error.message);\n      setUrls([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async shortCode => {\n    if (!window.confirm('Are you sure you want to delete this URL?')) {\n      return;\n    }\n    setDeleteLoading(prev => ({\n      ...prev,\n      [shortCode]: true\n    }));\n    try {\n      await urlService.deleteUrl(shortCode);\n      setUrls(urls.filter(url => !url.shortUrl.includes(shortCode)));\n      toast.success('URL deleted successfully! 🗑️');\n    } catch (error) {\n      toast.error(error.message);\n    } finally {\n      setDeleteLoading(prev => ({\n        ...prev,\n        [shortCode]: false\n      }));\n    }\n  };\n  const handleCopy = url => {\n    if (copy(url)) {\n      toast.success('Copied to clipboard! 📋');\n    } else {\n      toast.error('Failed to copy');\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'No expiry';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const isExpired = dateString => {\n    if (!dateString) return false;\n    return new Date(dateString) < new Date();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading your URLs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GnzVw1N+XUnTgSatnIvtZ5MaMeE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","toast","Trash2","ExternalLink","Copy","Calendar","BarChart3","RefreshCw","copy","urlService","jsxDEV","_jsxDEV","Dashboard","_s","urls","setUrls","isLoading","setIsLoading","deleteLoading","setDeleteLoading","fetchUrls","data","getAllUrls","Array","isArray","error","message","handleDelete","shortCode","window","confirm","prev","deleteUrl","filter","url","shortUrl","includes","success","handleCopy","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","isExpired","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/new for work/projects/url-shortener/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Trash2, ExternalLink, Copy, Calendar, BarChart3, RefreshCw } from 'lucide-react';\r\nimport copy from 'copy-to-clipboard';\r\nimport urlService from '../services/api'; // ✅ fixed import (no curly braces)\r\n\r\nconst Dashboard = () => {\r\n  const [urls, setUrls] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [deleteLoading, setDeleteLoading] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchUrls();\r\n  }, []);\r\n\r\n  const fetchUrls = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await urlService.getAllUrls();\r\n      setUrls(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      setUrls([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (shortCode) => {\r\n    if (!window.confirm('Are you sure you want to delete this URL?')) {\r\n      return;\r\n    }\r\n\r\n    setDeleteLoading(prev => ({ ...prev, [shortCode]: true }));\r\n    try {\r\n      await urlService.deleteUrl(shortCode);\r\n      setUrls(urls.filter(url => !url.shortUrl.includes(shortCode)));\r\n      toast.success('URL deleted successfully! 🗑️');\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setDeleteLoading(prev => ({ ...prev, [shortCode]: false }));\r\n    }\r\n  };\r\n\r\n  const handleCopy = (url) => {\r\n    if (copy(url)) {\r\n      toast.success('Copied to clipboard! 📋');\r\n    } else {\r\n      toast.error('Failed to copy');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'No expiry';\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const isExpired = (dateString) => {\r\n    if (!dateString) return false;\r\n    return new Date(dateString) < new Date();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"text-center py-16\">\r\n          <div className=\"loading-spinner mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading your URLs...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      {/* ... rest of your JSX stays unchanged ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}