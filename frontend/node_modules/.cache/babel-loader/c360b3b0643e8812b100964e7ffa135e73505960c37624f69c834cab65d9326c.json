{"ast":null,"code":"import axios from\"axios\";// ✅ Base Axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_BASE_URL,// e.g. https://url-shortener-backend-k0pv.onrender.com/api\nheaders:{\"Content-Type\":\"application/json\"}});// ✅ Request interceptor\napi.interceptors.request.use(config=>{var _config$method;console.log(\"🚀 API Request:\",(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);return config;},error=>{console.error(\"❌ API Request Error:\",error);return Promise.reject(error);});// ✅ Response interceptor\napi.interceptors.response.use(response=>{console.log(\"✅ API Response:\",response.status,response.config.url);return response;},error=>{var _error$response;console.error(\"❌ API Response Error:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,error.message);return Promise.reject(error);});// ✅ API Service Functions\nconst urlService={// 🔹 Create Short URL\nshortenUrl:async function(originalUrl){let expiryDate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const payload={longUrl:originalUrl,// matches backend @RequestBody field\nexpiryAt:expiryDate// optional expiry date\n};const response=await api.post(\"/shorten\",payload);return response.data;}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Failed to shorten URL\");}},// 🔹 Get All URLs (Dashboard)\ngetAllUrls:async()=>{try{const response=await api.get(\"/all\");return response.data;}catch(error){var _error$response3,_error$response3$data;throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||\"Failed to fetch URLs\");}},// 🔹 Delete URL by short code\ndeleteUrl:async shortCode=>{try{const response=await api.delete(\"/delete/\".concat(shortCode));return response.data;}catch(error){var _error$response4,_error$response4$data;throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||\"Failed to delete URL\");}},// 🔹 Get Redirect / Analytics\ngetRedirect:async shortCode=>{try{const response=await api.get(\"/\".concat(shortCode));return response.data;}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||\"URL not found\");}},// 🔹 Health Check (optional)\nhealthCheck:async()=>{try{const response=await api.get(\"/actuator/health\");return response.data;}catch(error){throw new Error(\"Service unavailable\");}}};// ✅ Export single instance\nexport default urlService;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","urlService","shortenUrl","originalUrl","expiryDate","arguments","length","undefined","payload","longUrl","expiryAt","post","data","_error$response2","_error$response2$data","Error","getAllUrls","get","_error$response3","_error$response3$data","deleteUrl","shortCode","delete","concat","_error$response4","_error$response4$data","getRedirect","_error$response5","_error$response5$data","healthCheck"],"sources":["D:/new for work/projects/url-shortener/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ✅ Base Axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL, // e.g. https://url-shortener-backend-k0pv.onrender.com/api\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// ✅ Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(\"🚀 API Request:\", config.method?.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ API Request Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ✅ Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"✅ API Response:\", response.status, response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ API Response Error:\", error.response?.status, error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ✅ API Service Functions\r\nconst urlService = {\r\n  // 🔹 Create Short URL\r\n  shortenUrl: async (originalUrl, expiryDate = null) => {\r\n    try {\r\n      const payload = {\r\n        longUrl: originalUrl, // matches backend @RequestBody field\r\n        expiryAt: expiryDate, // optional expiry date\r\n      };\r\n      const response = await api.post(\"/shorten\", payload);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || \"Failed to shorten URL\");\r\n    }\r\n  },\r\n\r\n  // 🔹 Get All URLs (Dashboard)\r\n  getAllUrls: async () => {\r\n    try {\r\n      const response = await api.get(\"/all\");\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || \"Failed to fetch URLs\");\r\n    }\r\n  },\r\n\r\n  // 🔹 Delete URL by short code\r\n  deleteUrl: async (shortCode) => {\r\n    try {\r\n      const response = await api.delete(`/delete/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || \"Failed to delete URL\");\r\n    }\r\n  },\r\n\r\n  // 🔹 Get Redirect / Analytics\r\n  getRedirect: async (shortCode) => {\r\n    try {\r\n      const response = await api.get(`/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || \"URL not found\");\r\n    }\r\n  },\r\n\r\n  // 🔹 Health Check (optional)\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await api.get(\"/actuator/health\");\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(\"Service unavailable\");\r\n    }\r\n  },\r\n};\r\n\r\n// ✅ Export single instance\r\nexport default urlService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}