{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// 🔹 Create a short URL\nexport async function shortenUrl(originalUrl) {\n  const res = await api.post(\"/shorten\", {\n    originalUrl\n  });\n  return res.data;\n}\n\n// 🔹 Get all URLs (for dashboard)\nexport async function getAllUrls() {\n  const res = await api.get(\"/all\");\n  return res.data;\n}\n\n// (optional) Get single URL by short code\nexport async function getUrl(shortCode) {\n  const res = await api.get(`/${shortCode}`);\n  return res.data;\n}\n\n// ✅ Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('🚀 API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('❌ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// ✅ Response interceptor\napi.interceptors.response.use(response => {\n  console.log('✅ API Response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('❌ API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  return Promise.reject(error);\n});\n\n// ✅ API Functions\nconst urlService = {\n  // 🔹 Shorten URL\n  shortenUrl: async (originalUrl, expiryDate = null) => {\n    try {\n      const payload = {\n        longUrl: originalUrl,\n        // ✅ Fixed variable name\n        expiryAt: expiryDate // ✅ Backend DTO match\n      };\n      const response = await api.post('/api/shorten', payload);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to shorten URL');\n    }\n  },\n  // 🔹 Get All URLs\n  getAllUrls: async () => {\n    try {\n      const response = await api.get('/api/all');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch URLs');\n    }\n  },\n  // 🔹 Delete URL\n  deleteUrl: async shortCode => {\n    try {\n      const response = await api.delete(`/api/${shortCode}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to delete URL');\n    }\n  },\n  // 🔹 Get Redirect (analytics)\n  getRedirect: async shortCode => {\n    try {\n      const response = await api.get(`/${shortCode}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'URL not found');\n    }\n  },\n  // 🔹 Health Check\n  healthCheck: async () => {\n    try {\n      const response = await api.get('/actuator/health');\n      return response.data;\n    } catch (error) {\n      throw new Error('Service unavailable');\n    }\n  }\n};\n\n// ✅ Export the service (no curly braces in import)\nexport default urlService;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","shortenUrl","originalUrl","res","post","data","getAllUrls","get","getUrl","shortCode","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","urlService","expiryDate","payload","longUrl","expiryAt","_error$response2","_error$response2$data","Error","_error$response3","_error$response3$data","deleteUrl","delete","_error$response4","_error$response4$data","getRedirect","_error$response5","_error$response5$data","healthCheck"],"sources":["D:/new for work/projects/url-shortener/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// 🔹 Create a short URL\r\nexport async function shortenUrl(originalUrl) {\r\n  const res = await api.post(\"/shorten\", { originalUrl });\r\n  return res.data;\r\n}\r\n\r\n// 🔹 Get all URLs (for dashboard)\r\nexport async function getAllUrls() {\r\n  const res = await api.get(\"/all\");\r\n  return res.data;\r\n}\r\n\r\n// (optional) Get single URL by short code\r\nexport async function getUrl(shortCode) {\r\n  const res = await api.get(`/${shortCode}`);\r\n  return res.data;\r\n}\r\n\r\n\r\n\r\n// ✅ Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('🚀 API Request:', config.method?.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ✅ Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('✅ API Response:', response.status, response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Response Error:', error.response?.status, error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ✅ API Functions\r\nconst urlService = {\r\n  // 🔹 Shorten URL\r\n  shortenUrl: async (originalUrl, expiryDate = null) => {\r\n    try {\r\n      const payload = {\r\n        longUrl: originalUrl,     // ✅ Fixed variable name\r\n        expiryAt: expiryDate,     // ✅ Backend DTO match\r\n      };\r\n      const response = await api.post('/api/shorten', payload);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to shorten URL');\r\n    }\r\n  },\r\n\r\n  // 🔹 Get All URLs\r\n  getAllUrls: async () => {\r\n    try {\r\n      const response = await api.get('/api/all');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to fetch URLs');\r\n    }\r\n  },\r\n\r\n  // 🔹 Delete URL\r\n  deleteUrl: async (shortCode) => {\r\n    try {\r\n      const response = await api.delete(`/api/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to delete URL');\r\n    }\r\n  },\r\n\r\n  // 🔹 Get Redirect (analytics)\r\n  getRedirect: async (shortCode) => {\r\n    try {\r\n      const response = await api.get(`/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'URL not found');\r\n    }\r\n  },\r\n\r\n  // 🔹 Health Check\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await api.get('/actuator/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Service unavailable');\r\n    }\r\n  },\r\n};\r\n\r\n// ✅ Export the service (no curly braces in import)\r\nexport default urlService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}