{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('🚀 API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('❌ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log('✅ API Response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('❌ API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  return Promise.reject(error);\n});\n\n// API functions\nexport const urlService = {\n  // Shorten URL\n  shortenUrl: async (originalUrl, expiryDate = null) => {\n    try {\n      const payload = {\n        longUrl,\n        expiryAt: expiryDate\n      }; // ✅ matches backend DTO\n\n      const response = await api.post('/api/shorten', payload);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to shorten URL');\n    }\n  },\n  // Get all URLs\n  getAllUrls: async () => {\n    try {\n      const response = await api.get('/api/all');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch URLs');\n    }\n  },\n  // Delete URL\n  deleteUrl: async shortCode => {\n    try {\n      const response = await api.delete(`/api/${shortCode}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to delete URL');\n    }\n  },\n  // Get redirect (for analytics)\n  getRedirect: async shortCode => {\n    try {\n      const response = await api.get(`/${shortCode}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'URL not found');\n    }\n  },\n  // Health check\n  healthCheck: async () => {\n    try {\n      const response = await api.get('/actuator/health');\n      return response.data;\n    } catch (error) {\n      throw new Error('Service unavailable');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","urlService","shortenUrl","originalUrl","expiryDate","payload","longUrl","expiryAt","post","data","_error$response2","_error$response2$data","Error","getAllUrls","get","_error$response3","_error$response3$data","deleteUrl","shortCode","delete","_error$response4","_error$response4$data","getRedirect","_error$response5","_error$response5$data","healthCheck"],"sources":["D:/new for work/projects/url-shortener/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('🚀 API Request:', config.method?.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('✅ API Response:', response.status, response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Response Error:', error.response?.status, error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API functions\r\nexport const urlService = {\r\n  // Shorten URL\r\n  shortenUrl: async (originalUrl, expiryDate = null) => {\r\n    try {\r\n      const payload = { longUrl, expiryAt: expiryDate };  // ✅ matches backend DTO\r\n\r\n      const response = await api.post('/api/shorten', payload);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to shorten URL');\r\n    }\r\n  },\r\n\r\n  // Get all URLs\r\n  getAllUrls: async () => {\r\n    try {\r\n      const response = await api.get('/api/all');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to fetch URLs');\r\n    }\r\n  },\r\n\r\n  // Delete URL\r\n  deleteUrl: async (shortCode) => {\r\n    try {\r\n      const response = await api.delete(`/api/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to delete URL');\r\n    }\r\n  },\r\n\r\n  // Get redirect (for analytics)\r\n  getRedirect: async (shortCode) => {\r\n    try {\r\n      const response = await api.get(`/${shortCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'URL not found');\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await api.get('/actuator/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Service unavailable');\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}