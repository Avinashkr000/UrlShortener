{"ast":null,"code":"var _jsxFileName = \"D:\\\\new for work\\\\projects\\\\url-shortener\\\\frontend\\\\src\\\\pages\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { BarChart3, TrendingUp, Globe, Calendar, RefreshCw, AlertCircle } from 'lucide-react';\nimport urlService from '../services/api'; // ✅ fixed import (no curly braces)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [urls, setUrls] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [healthStatus, setHealthStatus] = useState(null);\n  useEffect(() => {\n    fetchData();\n    checkHealth();\n  }, []);\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const data = await urlService.getAllUrls();\n      setUrls(Array.isArray(data) ? data : []);\n    } catch (error) {\n      toast.error(error.message);\n      setUrls([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const checkHealth = async () => {\n    try {\n      const health = await urlService.healthCheck();\n      setHealthStatus(health);\n    } catch (error) {\n      setHealthStatus({\n        status: 'DOWN'\n      });\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'No expiry';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const isExpired = dateString => {\n    if (!dateString) return false;\n    return new Date(dateString) < new Date();\n  };\n  const getAnalytics = () => {\n    const total = urls.length;\n    const active = urls.filter(url => !isExpired(url.expiryDate)).length;\n    const expired = urls.filter(url => isExpired(url.expiryDate)).length;\n    const withExpiry = urls.filter(url => url.expiryDate).length;\n    return {\n      total,\n      active,\n      expired,\n      withExpiry\n    };\n  };\n  const analytics = getAnalytics();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading analytics...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"cGK2qpjia0jcERBUeIXQAXJ8UM0=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","toast","BarChart3","TrendingUp","Globe","Calendar","RefreshCw","AlertCircle","urlService","jsxDEV","_jsxDEV","Analytics","_s","urls","setUrls","isLoading","setIsLoading","healthStatus","setHealthStatus","fetchData","checkHealth","data","getAllUrls","Array","isArray","error","message","health","healthCheck","status","formatDate","dateString","Date","toLocaleDateString","year","month","day","isExpired","getAnalytics","total","length","active","filter","url","expiryDate","expired","withExpiry","analytics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/new for work/projects/url-shortener/frontend/src/pages/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { BarChart3, TrendingUp, Globe, Calendar, RefreshCw, AlertCircle } from 'lucide-react';\r\nimport urlService from '../services/api'; // ✅ fixed import (no curly braces)\r\n\r\nconst Analytics = () => {\r\n  const [urls, setUrls] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [healthStatus, setHealthStatus] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    checkHealth();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await urlService.getAllUrls();\r\n      setUrls(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      setUrls([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const health = await urlService.healthCheck();\r\n      setHealthStatus(health);\r\n    } catch (error) {\r\n      setHealthStatus({ status: 'DOWN' });\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'No expiry';\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const isExpired = (dateString) => {\r\n    if (!dateString) return false;\r\n    return new Date(dateString) < new Date();\r\n  };\r\n\r\n  const getAnalytics = () => {\r\n    const total = urls.length;\r\n    const active = urls.filter(url => !isExpired(url.expiryDate)).length;\r\n    const expired = urls.filter(url => isExpired(url.expiryDate)).length;\r\n    const withExpiry = urls.filter(url => url.expiryDate).length;\r\n    return { total, active, expired, withExpiry };\r\n  };\r\n\r\n  const analytics = getAnalytics();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"text-center py-16\">\r\n          <div className=\"loading-spinner mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading analytics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      {/* ... rest of your JSX remains unchanged ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}